/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  THORChain_Router,
  THORChain_RouterInterface,
} from "../../../contracts/THORChain_Router.sol/THORChain_Router";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "rune",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "memo",
        type: "string",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldVault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newVault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "memo",
        type: "string",
      },
    ],
    name: "TransferAllowance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "memo",
        type: "string",
      },
    ],
    name: "TransferOut",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "finalAsset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "memo",
        type: "string",
      },
    ],
    name: "TransferOutAndCall",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldVault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newVault",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct THORChain_Router.Coin[]",
        name: "coins",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "string",
        name: "memo",
        type: "string",
      },
    ],
    name: "VaultTransfer",
    type: "event",
  },
  {
    inputs: [],
    name: "RUNE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "memo",
        type: "string",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "memo",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    name: "depositWithExpiry",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "asgard",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct THORChain_Router.Coin[]",
        name: "coins",
        type: "tuple[]",
      },
      {
        internalType: "string",
        name: "memo",
        type: "string",
      },
    ],
    name: "returnVaultAssets",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "newVault",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "memo",
        type: "string",
      },
    ],
    name: "transferAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "memo",
        type: "string",
      },
    ],
    name: "transferOut",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "target",
        type: "address",
      },
      {
        internalType: "address",
        name: "finalToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "memo",
        type: "string",
      },
    ],
    name: "transferOutAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "vaultAllowance",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620023fa380380620023fa8339818101604052810190620000379190620000f0565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016002819055505062000122565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b8826200008b565b9050919050565b620000ca81620000ab565b8114620000d657600080fd5b50565b600081519050620000ea81620000bf565b92915050565b60006020828403121562000109576200010862000086565b5b60006200011984828501620000d9565b91505092915050565b6122c880620001326000396000f3fe60806040526004361061007b5760003560e01c80634039fd4b1161004e5780634039fd4b1461011e57806344bc937b1461013a578063574da7171461015657806393e4eaa9146101725761007b565b806303b6a673146100805780631b738b32146100bd5780631fece7b4146100e65780632923e82e14610102575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190611510565b61019d565b6040516100b49190611569565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df91906116f6565b610224565b005b61010060048036038101906100fb91906117cb565b610338565b005b61011c6004803603810190610117919061196b565b6106e3565b005b61013860048036038101906101339190611a0a565b6108f0565b005b610154600480360381019061014f9190611aa1565b610b35565b005b610170600480360381019061016b91906117cb565b610b8a565b005b34801561017e57600080fd5b50610187610eda565b6040516101949190611b47565b60405180910390f35b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6002805403610268576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025f90611bbf565b60405180910390fd5b600280819055503073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361031b576102ad848484610efe565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f05b90458f953d3fcb2d7fb25616a2fddeca749d0c47cc5c9832d0266b5346eea85858560405161030e93929190611c4d565b60405180910390a3610329565b6103288585858585611029565b5b60016002819055505050505050565b600280540361037c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037390611bbf565b60405180910390fd5b6002808190555060008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036104045734905060008573ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050509050806103fe57600080fd5b5061066d565b60003414610447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043e90611cd7565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036105cc5782905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ccb1b3030856040518363ffffffff1660e01b81526004016104f8929190611cf7565b6020604051808303816000875af1158015610517573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053b9190611d58565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68846040518263ffffffff1660e01b81526004016105959190611569565b600060405180830381600087803b1580156105af57600080fd5b505af11580156105c3573d6000803e3d6000fd5b5050505061066c565b6105d6848461125d565b905080600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106649190611db4565b925050819055505b5b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fef519b7eb82aaf6ac376a6df2d793843ebfd593de5f1a0601d3cc6ab49ebb39583856040516106cc929190611de8565b60405180910390a350600160028190555050505050565b6002805403610727576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071e90611bbf565b60405180910390fd5b600280819055503073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036108345760005b82518110156107c7576107b48484838151811061078457610783611e18565b5b6020026020010151600001518584815181106107a3576107a2611e18565b5b602002602001015160200151610efe565b80806107bf90611e47565b915050610764565b508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f281daef48d91e5cd3d32db0784f6af69cd8d8d2e8c612a3568dca51ded51e08f8484604051610827929190611f8b565b60405180910390a361089e565b60005b825181101561089c57610889858585848151811061085857610857611e18565b5b60200260200101516000015186858151811061087757610876611e18565b5b60200260200101516020015186611029565b808061089490611e47565b915050610837565b505b60008373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050509050806108e157600080fd5b50600160028190555050505050565b6002805403610934576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092b90611bbf565b60405180910390fd5b60028081905550600034905060008673ffffffffffffffffffffffffffffffffffffffff168287878760405160240161096f93929190611fc2565b6040516020818303038152906040527f48c314f4000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516109f99190612040565b60006040518083038185875af1925050503d8060008114610a36576040519150601f19603f3d011682016040523d82523d6000602084013e610a3b565b606091505b5050905080610acc5760008573ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050905080610aca573373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015610ac8573d6000803e3d6000fd5b505b505b3373ffffffffffffffffffffffffffffffffffffffff167f8e5841bcd195b858d53b38bcf91b38d47f3bc800469b6812d35451ab619c6f6c888489898989604051610b1c969594939291906120b6565b60405180910390a2505060016002819055505050505050565b804210610b77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6e9061216a565b60405180910390fd5b610b8385858585610338565b5050505050565b6002805403610bce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc590611bbf565b60405180910390fd5b6002808190555060008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c995734905060008573ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050905080610c93573373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610c91573d6000803e3d6000fd5b505b50610e62565b82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d25919061218a565b925050819055506000808573ffffffffffffffffffffffffffffffffffffffff168786604051602401610d599291906121cd565b6040516020818303038152906040527fa9059cbb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610de39190612040565b6000604051808303816000865af19150503d8060008114610e20576040519150601f19603f3d011682016040523d82523d6000602084013e610e25565b606091505b5091509150818015610e535750600081511480610e52575080806020019051810190610e519190611d58565b5b5b610e5c57600080fd5b84925050505b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fa9cd03aa3c1b4515114539cd53d22085129d495cb9e9f9af77864526240f1bf7868486604051610ec393929190611c4d565b60405180910390a350600160028190555050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f8a919061218a565b9250508190555080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461101d9190611db4565b92505081905550505050565b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110b5919061218a565b9250508190555060008373ffffffffffffffffffffffffffffffffffffffff1686846040516024016110e8929190611cf7565b6040516020818303038152906040527f095ea7b3000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516111729190612040565b6000604051808303816000865af19150503d80600081146111af576040519150601f19603f3d011682016040523d82523d6000602084013e6111b4565b606091505b50509050806111c257600080fd5b8573ffffffffffffffffffffffffffffffffffffffff166344bc937b868686867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518663ffffffff1660e01b81526004016112239594939291906121f6565b600060405180830381600087803b15801561123d57600080fd5b505af1158015611251573d6000803e3d6000fd5b50505050505050505050565b6000808373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016112999190611b47565b602060405180830381865afa1580156112b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112da9190612265565b90506000808573ffffffffffffffffffffffffffffffffffffffff1633308760405160240161130b93929190611fc2565b6040516020818303038152906040527f23b872dd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516113959190612040565b6000604051808303816000865af19150503d80600081146113d2576040519150601f19603f3d011682016040523d82523d6000602084013e6113d7565b606091505b509150915081801561140557506000815114806114045750808060200190518101906114039190611d58565b5b5b61140e57600080fd5b828673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114489190611b47565b602060405180830381865afa158015611465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114899190612265565b611493919061218a565b935050505092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114dd826114b2565b9050919050565b6114ed816114d2565b81146114f857600080fd5b50565b60008135905061150a816114e4565b92915050565b60008060408385031215611527576115266114a8565b5b6000611535858286016114fb565b9250506020611546858286016114fb565b9150509250929050565b6000819050919050565b61156381611550565b82525050565b600060208201905061157e600083018461155a565b92915050565b61158d81611550565b811461159857600080fd5b50565b6000813590506115aa81611584565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611603826115ba565b810181811067ffffffffffffffff82111715611622576116216115cb565b5b80604052505050565b600061163561149e565b905061164182826115fa565b919050565b600067ffffffffffffffff821115611661576116606115cb565b5b61166a826115ba565b9050602081019050919050565b82818337600083830152505050565b600061169961169484611646565b61162b565b9050828152602081018484840111156116b5576116b46115b5565b5b6116c0848285611677565b509392505050565b600082601f8301126116dd576116dc6115b0565b5b81356116ed848260208601611686565b91505092915050565b600080600080600060a08688031215611712576117116114a8565b5b6000611720888289016114fb565b9550506020611731888289016114fb565b9450506040611742888289016114fb565b93505060606117538882890161159b565b925050608086013567ffffffffffffffff811115611774576117736114ad565b5b611780888289016116c8565b9150509295509295909350565b6000611798826114b2565b9050919050565b6117a88161178d565b81146117b357600080fd5b50565b6000813590506117c58161179f565b92915050565b600080600080608085870312156117e5576117e46114a8565b5b60006117f3878288016117b6565b9450506020611804878288016114fb565b93505060406118158782880161159b565b925050606085013567ffffffffffffffff811115611836576118356114ad565b5b611842878288016116c8565b91505092959194509250565b600067ffffffffffffffff821115611869576118686115cb565b5b602082029050602081019050919050565b600080fd5b600080fd5b60006040828403121561189a5761189961187f565b5b6118a4604061162b565b905060006118b4848285016114fb565b60008301525060206118c88482850161159b565b60208301525092915050565b60006118e76118e28461184e565b61162b565b9050808382526020820190506040840283018581111561190a5761190961187a565b5b835b81811015611933578061191f8882611884565b84526020840193505060408101905061190c565b5050509392505050565b600082601f830112611952576119516115b0565b5b81356119628482602086016118d4565b91505092915050565b60008060008060808587031215611985576119846114a8565b5b6000611993878288016114fb565b94505060206119a4878288016117b6565b935050604085013567ffffffffffffffff8111156119c5576119c46114ad565b5b6119d18782880161193d565b925050606085013567ffffffffffffffff8111156119f2576119f16114ad565b5b6119fe878288016116c8565b91505092959194509250565b600080600080600060a08688031215611a2657611a256114a8565b5b6000611a34888289016117b6565b9550506020611a45888289016114fb565b9450506040611a56888289016114fb565b9350506060611a678882890161159b565b925050608086013567ffffffffffffffff811115611a8857611a876114ad565b5b611a94888289016116c8565b9150509295509295909350565b600080600080600060a08688031215611abd57611abc6114a8565b5b6000611acb888289016117b6565b9550506020611adc888289016114fb565b9450506040611aed8882890161159b565b935050606086013567ffffffffffffffff811115611b0e57611b0d6114ad565b5b611b1a888289016116c8565b9250506080611b2b8882890161159b565b9150509295509295909350565b611b41816114d2565b82525050565b6000602082019050611b5c6000830184611b38565b92915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611ba9601f83611b62565b9150611bb482611b73565b602082019050919050565b60006020820190508181036000830152611bd881611b9c565b9050919050565b600081519050919050565b60005b83811015611c08578082015181840152602081019050611bed565b60008484015250505050565b6000611c1f82611bdf565b611c298185611b62565b9350611c39818560208601611bea565b611c42816115ba565b840191505092915050565b6000606082019050611c626000830186611b38565b611c6f602083018561155a565b8181036040830152611c818184611c14565b9050949350505050565b7f756e657870656374656420657468000000000000000000000000000000000000600082015250565b6000611cc1600e83611b62565b9150611ccc82611c8b565b602082019050919050565b60006020820190508181036000830152611cf081611cb4565b9050919050565b6000604082019050611d0c6000830185611b38565b611d19602083018461155a565b9392505050565b60008115159050919050565b611d3581611d20565b8114611d4057600080fd5b50565b600081519050611d5281611d2c565b92915050565b600060208284031215611d6e57611d6d6114a8565b5b6000611d7c84828501611d43565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611dbf82611550565b9150611dca83611550565b9250828201905080821115611de257611de1611d85565b5b92915050565b6000604082019050611dfd600083018561155a565b8181036020830152611e0f8184611c14565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611e5282611550565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e8457611e83611d85565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611ec4816114d2565b82525050565b611ed381611550565b82525050565b604082016000820151611eef6000850182611ebb565b506020820151611f026020850182611eca565b50505050565b6000611f148383611ed9565b60408301905092915050565b6000602082019050919050565b6000611f3882611e8f565b611f428185611e9a565b9350611f4d83611eab565b8060005b83811015611f7e578151611f658882611f08565b9750611f7083611f20565b925050600181019050611f51565b5085935050505092915050565b60006040820190508181036000830152611fa58185611f2d565b90508181036020830152611fb98184611c14565b90509392505050565b6000606082019050611fd76000830186611b38565b611fe46020830185611b38565b611ff1604083018461155a565b949350505050565b600081519050919050565b600081905092915050565b600061201a82611ff9565b6120248185612004565b9350612034818560208601611bea565b80840191505092915050565b600061204c828461200f565b915081905092915050565b6000819050919050565b600061207c612077612072846114b2565b612057565b6114b2565b9050919050565b600061208e82612061565b9050919050565b60006120a082612083565b9050919050565b6120b081612095565b82525050565b600060c0820190506120cb60008301896120a7565b6120d8602083018861155a565b6120e56040830187611b38565b6120f26060830186611b38565b6120ff608083018561155a565b81810360a08301526121118184611c14565b9050979650505050505050565b7f54484f52436861696e5f526f757465723a206578706972656400000000000000600082015250565b6000612154601983611b62565b915061215f8261211e565b602082019050919050565b6000602082019050818103600083015261218381612147565b9050919050565b600061219582611550565b91506121a083611550565b92508282039050818111156121b8576121b7611d85565b5b92915050565b6121c78161178d565b82525050565b60006040820190506121e260008301856121be565b6121ef602083018461155a565b9392505050565b600060a08201905061220b6000830188611b38565b6122186020830187611b38565b612225604083018661155a565b81810360608301526122378185611c14565b9050612246608083018461155a565b9695505050505050565b60008151905061225f81611584565b92915050565b60006020828403121561227b5761227a6114a8565b5b600061228984828501612250565b9150509291505056fea26469706673582212203a7badb7ed9880c35399d452b3fa91681c9e6d3a4d002ecb66dac7749399937864736f6c63430008110033";

type THORChain_RouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: THORChain_RouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class THORChain_Router__factory extends ContractFactory {
  constructor(...args: THORChain_RouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    rune: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<THORChain_Router> {
    return super.deploy(rune, overrides || {}) as Promise<THORChain_Router>;
  }
  override getDeployTransaction(
    rune: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(rune, overrides || {});
  }
  override attach(address: string): THORChain_Router {
    return super.attach(address) as THORChain_Router;
  }
  override connect(signer: Signer): THORChain_Router__factory {
    return super.connect(signer) as THORChain_Router__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): THORChain_RouterInterface {
    return new utils.Interface(_abi) as THORChain_RouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): THORChain_Router {
    return new Contract(address, _abi, signerOrProvider) as THORChain_Router;
  }
}
